@model Scrumboard.Web.DAL.Task

@{
    ViewBag.Title = "Create";
    int BacklogItemId = Convert.ToInt32(ViewBag.BacklogItemId);
    bool refreshParent = Convert.ToBoolean(ViewBag.RefreshParent);
    
    if (refreshParent)
    {
        <script type="text/javascript">
            parent.location.reload();
        </script>
    }
}


<h2>Create Task</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Task</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Priority)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Priority)
            @Html.ValidationMessageFor(model => model.Priority)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TaskStatusId, "TaskStatus")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TaskStatusId", String.Empty)
            @Html.ValidationMessageFor(model => model.TaskStatusId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeamMemberId, "TeamMember")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TeamMemberId", String.Empty)
            @Html.ValidationMessageFor(model => model.TeamMemberId)
        </div>

        <div class="editor-field">
            @Html.HiddenFor(model => model.BacklogItemId, new { @Value = BacklogItemId })
        </div>

        <p>
            <input type="submit" value="Create" />
            <input type="button" value ="Cancel" onclick="parent.closeTaskForm()" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
